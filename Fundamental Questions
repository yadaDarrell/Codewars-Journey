1. Multiply 

Complete this function. What is wrong with this code?
def multiply(a, b)

#1 Solution
def multiply(a, b):
    return a * b
print(multiply(5,6))

2. Friend or Foe? 
Make a program that filters a list of strings and returns a list with only your friends name in it.
If a name has exactly 4 letters in it, you can be sure that it has to be a friend of yours! Otherwise, you can be sure he's not...
Ex: Input = ["Ryan", "Kieran", "Jason", "Yous"], Output = ["Ryan", "Yous"]

#2 Solution 
def friend(x):
    shouldBe = []
    for names in x:
        if len(names) == 4:
            shouldBe.append(names)
        else:
            continue
    return shouldBe
x = ["Ryan", "Kieran", "Mark"]
print(friend(x))

3. Shortest Word
Simple, given a string of words, return the length of the shortest word(s).
String will never be empty and you do not need to account for different data types

#3 Solution
def find_short(s):
    l = map(len,s.split())
    return min(l)
s = "bitcoin take over the world maybe who knows perhaps"
print(find_short(s))

4. Opposite number
Given a number, find its opposite.

#4 Solution
def opposite(num):
    return -num
    
5. Convert Number to String
Create a function that transforms a number to a string.

#5 Solution
def num_to_string(num):
    return str(num)
    
6. Consider an array of sheep where some sheep may be missing from their place. We need a function that counts the number of sheep present in the array (true means present).
For example : 

[True,  True,  True,  False,
  True,  True,  True,  True ,
  True,  False, True,  False,
  True,  False, False, True ,
  True,  True,  True,  True ,
  False, False, True,  True]
  
 #6 Solution Method 1
 
 def count_sheep(arrayOfSheep):
    num_of_true = 0
    for each_count in arrayOfSheep:
        if each_count == True:
            num_of_true += each_count
    return num_of_true

#6 Solution Method 2
 
 def count_sheep(arrayOfSheep):
    return arrayOfSheep.count(True)
